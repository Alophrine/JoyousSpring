[manifest]
version = "0.1.0"
dump_lua = true
priority = 0

# Customize sell cost
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "if self.area and self.ability.couponed and (self.area == G.shop_jokers or self.area == G.shop_booster) then self.cost = 0 end"
position = 'before'
match_indent = true
payload = '''
if JoyousSpring then JoyousSpring.set_cost(self) end
'''

# Fix dollar bonus name text
[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "elseif string.find(config.name, 'joker') then"
position = 'before'
match_indent = true
payload = '''
elseif string.find(config.name, 'joker') and JoyousSpring and JoyousSpring.is_monster_card(config.card) then
    local joy_loc_string = localize{type = 'name_text', set = config.card.config.center.set, key = config.card.config.center.key}
    table.insert(left_text, {n=G.UIT.O, config={object = DynaText({string = joy_loc_string, colours = {JoyousSpring.get_name_color(config.card.config.center.key) or G.C.JOY.NORMAL}, shadow = true, pop_in = 0, scale = (0.6*scale)- 0.006 * #joy_loc_string, silent = true})}})
'''

# Consumable box
[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = "desc_from_rows(AUT.main),"
position = 'before'
match_indent = true
payload = '''
AUT.joy_consumable and desc_from_rows(AUT.joy_consumable) or nil,
'''

# Better info_queue layout
[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = "local nodes_per_col = math.ceil(#info_boxes/cols)"
position = 'before'
match_indent = true
payload = '''
if JoyousSpring.is_monster_card(card) then cols = card.area and card.area == G.shop_jokers and math.ceil(#info_boxes/2) or 1 end
'''

[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = '''
{n=G.UIT.R, config={align = "cm"}, nodes={
{n=G.UIT.R, config={align = "cm", colour = lighten(G.C.JOKER_GREY, 0.5), r = 0.1, padding = 0.05, emboss = 0.05}, nodes={
'''
position = 'at'
match_indent = true
payload = '''
{n=G.UIT.R, config={align = JoyousSpring.is_monster_card(card) and (card.area and card.area == G.shop_jokers and "tm" or ((card.T.x > G.ROOM.T.w * 0.4) and "cr" or "cl")) or "cm" }, nodes={
{n=G.UIT.R, config={align = JoyousSpring.is_monster_card(card) and (card.area and card.area == G.shop_jokers and "tm" or ((card.T.x > G.ROOM.T.w * 0.4) and "cr" or "cl")) or "cm", colour = lighten(G.C.JOKER_GREY, 0.5), r = 0.1, padding = 0.05, emboss = 0.05}, nodes={
'''

[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = '''table.insert(info_cols, {n=G.UIT.C, config = {align="cm"}, nodes = col})'''
position = 'at'
match_indent = true
payload = '''
table.insert(info_cols, {n=G.UIT.C, config = {align=JoyousSpring.is_monster_card(card) and card.area and card.area == G.shop_jokers and "tm" or "cm"}, nodes = col})
'''

# More info for info_queue layout
[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = "info_boxes = {{n=G.UIT.R, config = {align=\"cm\", padding = 0.05, card_pos = card.T.x }, nodes = info_cols}}"
position = 'at'
match_indent = true
payload = '''
info_boxes = {{n=G.UIT.R, config = {align="cm", padding = 0.05, card_pos = card.T.x, card = card}, nodes = info_cols}}
'''

# # Nicer display for Jokers with long names
# [[patches]]
# [patches.pattern]
# target = "functions/misc_functions.lua"
# pattern = "maxw = 5,"
# position = 'at'
# match_indent = true
# payload = '''
# '''
