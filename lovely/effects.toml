[manifest]
version = "0.1.0"
dump_lua = true
priority = 0

# Ash Blossom prevent draw effect
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = "if G.GAME.blind.name == 'The Serpent' and"
position = 'before'
match_indent = true
payload = '''
if next(SMODS.find_card("j_joy_yokai_ash")) and
    (G.GAME.current_round.hands_played > 0 or G.GAME.current_round.discards_used > 0) then
    for _, joker in ipairs(SMODS.find_card("j_joy_yokai_ash")) do
        if JoyousSpring.can_use_abilities(joker) and
            pseudorandom("j_joy_yokai_ash") < G.GAME.probabilities.normal / joker.ability.extra.odds then
            hand_space = (#G.hand.cards == 0) and 1 or 0
            SMODS.calculate_context({joy_no_draw = true, joy_card = joker})
            break
        end
    end
end
'''

# Avramax instawin context
[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "G.GAME.blind:drawn_to_hand()"
position = 'before'
match_indent = true
payload = '''
SMODS.calculate_context({joy_selecting_hand = true})
'''

# Add to next shop
[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = "G.GAME.spectral_rate = G.GAME.spectral_rate or 0"
position = 'before'
match_indent = true
payload = '''
if G.GAME.joy_create_card and #G.GAME.joy_create_card > 0 then
    local joy_forced_card_key = table.remove(G.GAME.joy_create_card,1)
    local joy_forced_card = SMODS.create_card({
                        key = joy_forced_card_key.key,
                        area = area
                    })
    create_shop_card_ui(joy_forced_card, 'Joker', area)
    joy_forced_card.states.visible = false
    joy_forced_card:start_materialize()
    for k, v in ipairs(G.GAME.tags) do
        if v:apply_to_run({ type = 'store_joker_modify', card = joy_forced_card }) then break end
    end
    return joy_forced_card
end
'''

# Game Over text (stolen from LobCorp <3)
[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = "local label_scale = 0.5"
position = "before"
payload = '''
if score == 'defeated_by' and JoyousSpring and JoyousSpring.defeated_by then
    local center = G.P_CENTERS[JoyousSpring.defeated_by]
    local text = localize{type = 'name_text', key = JoyousSpring.defeated_by, set = "Joker"}
    local sprite = Sprite(0, 0, 1.4*(71/95), 1.4, G.ASSET_ATLAS[center.atlas], center.pos)

    sprite:define_draw_steps({
        {shader = 'dissolve', shadow_height = 0.05},
        {shader = 'dissolve'}
    })

    score_tab[1].nodes[1].config.object:remove()
    score_tab[2].nodes[1].config.object:remove()
    score_tab = {
        {n=G.UIT.R, config={align = "cm", minh = 0.6}, nodes={
            {n=G.UIT.O, config={object = DynaText({string = text, colours = {JoyousSpring.get_name_color(JoyousSpring.defeated_by)},shadow = true, float = true , scale = 0.35})}}
        }},
        {n=G.UIT.R, config={align = "cm", padding = 0.1}, nodes={
            {n=G.UIT.O, config={object = sprite}}
        }},
    }
    JoyousSpring.defeated_by = nil
end'''
match_indent = true

# Keep cards flipped after blind
[[patches]]
[patches.pattern]
target = "blind.lua"
pattern = "if v.facing == 'back' then v:flip() end"
position = 'at'
match_indent = true
payload = '''
if self.name == 'Amber Acorn' and v.facing == 'back' then v:flip() end
'''

# Modify modify scoring hand context
[[patches]]
[patches.pattern]
target = 'functions/state_events.lua'
match_indent = true
position = 'at'
pattern = '''
SMODS.calculate_context({modify_scoring_hand = true, other_card =  G.play.cards[i], full_hand = G.play.cards, scoring_hand = scoring_hand}, effects)
'''
payload = '''
SMODS.calculate_context({modify_scoring_hand = true, other_card =  G.play.cards[i], full_hand = G.play.cards, scoring_hand = scoring_hand, in_scoring = true}, effects)
'''

# Add multiple hand_types to planets
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''
if v.config.hand_type == G.GAME.last_hand_played then
    _planet = v.key
end
'''
position = 'after'
match_indent = true
payload = '''
if v.config.joy_hand_types then
    for _, name in ipairs(v.config.joy_hand_types) do
        if name == G.GAME.last_hand_played then
            _planet = v.key
            break
        end
    end
    if planet ~= 0 then break end
end
'''
